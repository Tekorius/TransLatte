<?php

namespace App\Model;
use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * This class is generated by a repository that returns a paginated result
 */
class PaginatedResponse
{
    /** @var PaginatedRequest */
    private $request;
    private $count = 0;
    private $data = [];
    private $pages = 0;

    private function __construct(PaginatedRequest $request)
    {
        $this->request = $request;
    }

    public static function newInstance(PaginatedRequest $request, QueryBuilder $qb)
    {
        $query = $qb
            ->setFirstResult($request->getOffset())
            ->setMaxResults($request->getLimit())
            ->getQuery();

        $paginator = new Paginator($query);

        $res = new PaginatedResponse($request);
        $res->count = $paginator->count();
        $res->data = $paginator->getQuery()->getResult();

        $res->pages = (int) ceil($res->count / $request->getLimit());

        return $res;
    }

    public function getData()
    {
        return $this->data;
    }

    public function getCount()
    {
        return $this->count;
    }

    public function getPages()
    {
        return $this->pages;
    }

    public function getCurrentPage()
    {
        return $this->request->getPage();
    }
}